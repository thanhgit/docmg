// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2017-06-25 01:25:37.872454531 +0800 CST

package docs

import (
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "This is a back-end API",
        "title": "Remote server API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "ThanhUIT",
            "url": "http://www.swagger.io/support",
            "email": "thanh29695@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "127.0.0.1:7000",
    "basePath": "/api",
    "paths": {
		"/login": {
            "post": {
                "description": "auth for api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
				"parameters": [
                    {
                        "description": "account body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
							"$ref": "#/definitions/web.Account"
                        }
                    }
                ],
                ,
                "responses": {
                    "200": {
						"description": "Ok",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIStatus"
                        }
                    },
                    "400": {
                        "description": "We not find",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Empty",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
		"/servers": {
            "get": {
                "description": "get all servers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                ,
                "responses": {
                    "200": {
						"description": "Ok",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.GetServersResponse"
                        }
                    },
                    "400": {
                        "description": "We not find",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Empty",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
		"/servers/:id_update": {
            "post": {
                "description": "update server by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
				"parameters": [
                    {
                        "description": "server body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
							"$ref": "#/definitions/web.Server"
                        }
                    }
                ],
                ,
                "responses": {
                    "200": {
						"description": "Ok",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIStatus"
                        }
                    },
                    "400": {
                        "description": "We not find",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Empty",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
		"/servers/:id_delete": {
            "delete": {
                "description": "delete server by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
				"parameters": [
                    {
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int"
                        }
                    }
                ],
                ,
                "responses": {
                    "200": {
						"description": "Ok",
                        "schema": {
                            "type": "json",
                            "$ref": "#/definitions/web.APIStatus"
                        }
                    },
                    "400": {
                        "description": "We not find",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Empty",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
        "/websites": {
            "get": {
                "description": "get all websites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                ,
                "responses": {
                    "200": {
						"description": "Ok",
                        "schema": {
                            "type": "json",
                            "$ref": "#/definitions/web.GetWebsitesResponse"
                        }
                    },
                    "400": {
                        "description": "We not find",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Empty",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
		"/websites?type=dashboard": {
            "get": {
                "description": "get all websites has type is dashboard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                ,
                "responses": {
                    "200": {
						"description": "Ok",
                        "schema": {
                            "type": "json",
                            "$ref": "#/definitions/web.GetWebsitesTypeDashboardResponse"
                        }
                    },
                    "400": {
                        "description": "We not find",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Empty",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
		"/websites/:id_update": {
            "post": {
                "description": "update website by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
				"parameters": [
                    {
                        "description": "server body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
							$ref": "#/definitions/web.Website"
                        }
                    }
                ],
                ,
                "responses": {
                    "200": {
						"description": "Ok",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIStatus"
                        }
                    },
                    "400": {
                        "description": "We not find",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Empty",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
		"/websites/:id_delete": {
            "delete": {
                "description": "Delete website by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
				"parameters": [
                    {
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int"
                        }
                    }
                ],
                ,
                "responses": {
                    "200": {
						"description": "Ok",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIStatus"
                        }
                    },
                    "400": {
                        "description": "We not find",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Empty",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        },
		"/dashboards": {
            "post": {
                "description": "get all websites has type is dashboard with password or none",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
				"parameters": [
                    {
                        "description": "password",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
							$ref": "#/definitions/web.Password"
                        }
                    }
                ],
                ,
                "responses": {
                    "200": {
						"description": "Ok",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.GetWebsitesTypeDashboardResponse"
                        }
                    },
                    "400": {
                        "description": "We not find",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    },
                    "404": {
                        "description": "Empty",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "web.APIError": {
            "type": "object",
            "properties": {
                "ErrorCode": {
                    "type": "integer"
                },
                "ErrorMessage": {
                    "type": "string"
                }
            }
        },
		"web.APIStatus": {
            "type": "object",
            "properties": {
                "Status": {
					"type": "string"
				},
				"Code": {
					"type": "integer"
				}
            }
        },
		"web.Account": {
            "type": "object",
            "properties": {
                "user_name": {
					"type": "string"
				},
				"password": {
					"type": "string"
				}
            }
        },
		"web.Server": {
            "type": "object",
            "properties": {
                "Id": {
					"type": "integer"
				},
				"Name": {
					"type": "string"
				},
				"Ip": {
					"type": "string"
				},
				"Port": {
					"type": "string"
				},
				"Password": {
					"type": "string"
				}
            }
        },
		"web.Website": {
            "type": "object",
            "properties": {
                "Id": {
					"type": "integer"
				},
				"Url": {
					"type": "string"
				},
				"Username": {
					"type": "string"
				},
				"Password": {
					"type": "string"
				},
				"Note": {
					"type": "string"
				}
            }
        },
		"web.Password": {
            "type": "object",
            "properties": {
                "Password": {
					"type": "string"
				}
            }
        },
		"web.GetServersResponse": {
            "type": "object",
            "properties": {
                "Numbers": {
					"type": "integer"
				},
				"Servers": {
					"type": "array",
					"items": {
						"type": "object",
						"$ref": "#/definitions/web.Server"
					}
				}
            }
        },
        "web.GetWebsitesResponse": {
            "type": "object",
            "properties": {
                "Numbers": {
					"type": "integer"
				},
				"Websites": {
					"type": "array",
					"items": {
						"type": "object",
						"$ref": "#/definitions/web.Website"
					}
				}
            }
        },
		"web.GetWebsitesTypeDashboardResponse": {
            "type": "object",
            "properties": {
                "Numbers": {
					"type": "integer"
				},
				"Websites": {
					"type": "array",
					"items": {
						"type": "object",
						"$ref": "#/definitions/web.Website"
					}
				},
				"Type": {
					"type": "string"
				}
            }
        }
    }
}`

type s struct{}

func (s *s) ReadDoc() string {
	return doc
}
func init() {
	swag.Register(swag.Name, &s{})
}
